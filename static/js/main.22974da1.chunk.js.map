{"version":3,"sources":["toDoItems.js","ToDoApp.js","router.js","index.js"],"names":["ToDoItem","index","item","onClickCheck","removeItem","id","type","onClick","checked","isCompleted","style","margin","className","title","visible","ToDoApp","props","ItemsCheck","e","data","state","setState","addItem","keyCode","target","value","newItem","slice","changeOption","option","bind","JSON","parse","localStorage","getItem","this","setItem","stringify","toDoItems","class","onKeyUp","placeholder","map","length","Component","RouterTask","Fragment","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22974da1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./toDoItem.css\";\r\nexport default function ToDoItem({ index, item, onClickCheck, removeItem }) {\r\n  return (\r\n    <div id=\"toDoItems\">\r\n      <input\r\n        type=\"checkbox\"\r\n        onClick={onClickCheck}\r\n        checked={item.isCompleted}\r\n      />\r\n      <h3 style={{ margin: \"0\" }}>{index + 1}</h3>\r\n      <h3 className=\"title\">\r\n        {item.title} ({item.isCompleted ? \"Completed\" : \"Not Completed\"})\r\n      </h3>\r\n      <button\r\n        className=\"deleteIcons\"\r\n        onClick={removeItem}\r\n        visible=\"false\"\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ToDoItem from \"./toDoItems.js\";\r\nimport \"./toDoApp.css\";\r\nexport default class ToDoApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        { title: \"task 1\", isCompleted: true },\r\n        { title: \"task 2\", isCompleted: false },\r\n      ],\r\n      option: \"all\",\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const data = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n    this.setState({ data: data });\r\n  }\r\n  componentDidUpdate() {\r\n    let data = this.state.data;\r\n    localStorage.setItem(\"data\", JSON.stringify(data));\r\n  }\r\n  ItemsCheck = (item, index) => {\r\n    return (e) => {\r\n      const isCompleted = item.isCompleted;\r\n      const title = item.title;\r\n      let data = this.state.data;\r\n      data[index] = { ...data[index], title: title, isCompleted: !isCompleted };\r\n      this.setState({ data });\r\n    };\r\n  };\r\n  addItem = (e) => {\r\n    if (e.keyCode === 13 && e.target.value !== \"\") {\r\n      let newItem = e.target.value;\r\n      let data = this.state.data;\r\n      data = [{ title: newItem, isCompleted: false }, ...data];\r\n      this.setState({ data: data });\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n  removeItem = (item, index) => {\r\n    let data = this.state.data;\r\n    data = [...data.slice(0, index), ...data.slice(index + 1)];\r\n    this.setState({ data: data });\r\n  };\r\n  changeOption = (e) => {\r\n    this.setState({ option: e.target.value });\r\n  };\r\n  render() {\r\n    const toDoItems = this.state.data;\r\n    return (\r\n      <div id=\"to-do-app\">\r\n        <div class=\"e-flex\">\r\n          <div class=\"e-flex-item\">\r\n            <div class=\"e-flex-image\">todolist</div>\r\n            <input\r\n              id=\"addItem\"\r\n              onKeyUp={this.addItem}\r\n              placeholder=\"add new item\"\r\n            />\r\n            <div class=\"e-flex-content\">\r\n              <div class=\"e-flex-title\">\r\n                <span>\r\n                  {toDoItems?.map((item, index) => {\r\n                    if (this.state.option === \"all\")\r\n                      return (\r\n                        <ToDoItem\r\n                          index={index}\r\n                          item={item}\r\n                          removeItem={() => this.removeItem(item, index)}\r\n                          onClickCheck={this.ItemsCheck(item, index)}\r\n                        />\r\n                      );\r\n                    else if (\r\n                      this.state.option === \"active\" &&\r\n                      item.isCompleted === false\r\n                    ) {\r\n                      return (\r\n                        <ToDoItem\r\n                          index={index}\r\n                          item={item}\r\n                          removeItem={() => this.removeItem(item, index)}\r\n                          onClickCheck={this.ItemsCheck(item, index)}\r\n                        />\r\n                      );\r\n                    } else if (\r\n                      this.state.option === \"completed\" &&\r\n                      item.isCompleted === true\r\n                    ) {\r\n                      return (\r\n                        <ToDoItem\r\n                          index={index}\r\n                          item={item}\r\n                          removeItem={() => this.removeItem(item, index)}\r\n                          onClickCheck={this.ItemsCheck(item, index)}\r\n                        />\r\n                      );\r\n                    }\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div id=\"footer\">\r\n              <h3>{this.state.data.length} item left</h3>\r\n              <div id=\"option\">\r\n                <button\r\n                  className=\"option\"\r\n                  onClick={this.changeOption}\r\n                  value=\"all\"\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  className=\"option\"\r\n                  onClick={this.changeOption}\r\n                  value=\"active\"\r\n                >\r\n                  Active\r\n                </button>\r\n                <button\r\n                  className=\"option\"\r\n                  onClick={this.changeOption}\r\n                  value=\"completed\"\r\n                >\r\n                  Completed\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport ToDoApp from \"./ToDoApp.js\";\r\nimport User from \"./User.js\";\r\nexport default class RouterTask extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToDoApp />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport RouterTask from \"./router\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RouterTask />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}